# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

# Первый вариант:
new_list = []
numbers = [2, -5, 8, 9, -25, 25, 4]
for num in numbers:
    if num == (num ** 0.5) ** 2:
        new_list.append(int(num ** 0.5))
print(f'Result_1 = {new_list}')

# Второй вариант:
new_list = [int(num ** 0.5) for num in numbers if num == (num ** 0.5) ** 2]
print(f'Result_2 = {new_list}')



# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

# Создаем словари.
months = {
    '01': 'января', '02': 'февраля', '03': 'марта', '04': 'апреля',
    '05': 'мая', '06': 'июня', '07': 'июля', '08': 'августа',
    '09': 'сентября', '10': 'октября', '11': 'ноября', '12': 'декабря'}
days_general = {
    1: 'первое', 2: 'второе', 3: 'третье', 4: 'четвертое', 5: 'пятое',      # Составные единицы
    6: 'шестое', 7: 'седьмое', 8: 'восьмое',  9: 'девятое', 0: '',          #
    11: 'одиннадцатое', 12: 'двенадцатое', 13: 'тринадцатое',               
    14: 'четырнадцатое', 15: 'пятнадцатое', 16: 'шестнадцатое',             
    17: 'семнадцатое', 18: 'восемнадцатое', 19: 'девятнадцатое',            
    '10': 'десятое', '20': 'двадцатое', '30': 'тридцатое',                  # кратные 10
    20: 'двадцать ', 30: 'тридцать '}                                       # Составные десятки

def printing_date(array_day, month, year):
    print('{}{} {} {} года'.format(
        days_general[array_day[0]], days_general[array_day[1]],
        months[month], year))


# Ввод пользователем даты для конвертации.
day, month, year  = input('Введите дату (в формате dd.mm.yyyy): ').split('.')
date_key=[]
day = int(day)

if day == 31 or 21 <= day <= 29:
    date_key = [(day // 10) * 10, day % 10]
elif day % 10 == 0:
    date_key = [str(day), 0]
else:
    date_key = [day, 0]

printing_date(date_key, month, year)



# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random
import random

n = int(input('Введите количество элементов в списке: '))
# Первый вариант:
numbers = []
for i in range(n):
    numbers.append(random.randint(-100,100))
print(f'Result_1 = {numbers}')

# Второй вариант:
numbers = [random.randint(-100, 100) for i in range(n)]
print(f'Result_2 = {numbers}')



# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут:
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]


# A:
lst = [1, 2, 4, 5, 6, 2, 5, 2]
lst2 = list(set(lst))
print(lst2)


# Б. Вариант без метода count():
lst = [1, 2, 4, 5, 6, 2, 5, 2]
lst2 = []
for element in lst:
    while len(lst) > 0:
        number_del = lst.pop(0)
        if number_del not in lst:
            lst2.append(number_del)
        else:
            while number_del in lst:
                del lst[lst.index(number_del)]
print(f'Result_1 = {lst2}')


# Б. Вариант с методом count():
lst = [1, 2, 4, 5, 6, 2, 5, 2]
lst2 = []
for element in lst:
    if lst.count(element) == 1:
        lst2.append(element)
print(f'Result_2 = {lst2}')
